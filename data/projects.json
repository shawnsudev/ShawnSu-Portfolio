{
  "personalProjects": [
    {
      "name": "Portfolio Website",
      "img": "https://mir-s3-cdn-cf.behance.net/project_modules/disp/945b0225337909.563440870421b.png",
      "tools": [
        "next",
        "chakra-ui",
        "framer-motion",
        "node",
        "vercel",
        "github"
      ],
      "focus": "Frontend Development",
      "description": "My personal portfolio website (i.e. this site) that lists previous projects I have done and demostrates my coding skills.",
      "link": "https://sudoku-shawnsu.netlify.app/",
      "source": "https://sudoku-shawnsu.netlify.app/",
      "details": [
        { "title": "Overview", "content": ["", ""] },
        { "title": "Animation & Transition", "content": [""] },
        { "title": "Overview", "content": [""] }
      ],
      "highlights": [
        { "title": "Themeable UI Framework", "content": [""] },
        {
          "title": "Animation & Transition",
          "content": [
            "Learning how to do page transition/animation was pretty fun for me"
          ]
        },
        {
          "title": "Composition",
          "content": [
            "Building a project like this really helped deepening the concept of composition and how to create and reuse components. Initially I write a lot of code in one component to the point it becomes hundreds of line and too unwieldy, the structure of the code becomes blurry, you have to go through layers of tags to see what's inside. It becomes clear that the best way to handle this kind of situation is to create lower level components for storing repeating logic/code, then use higher level components to compose the app. "
          ]
        }
      ]
    },
    {
      "name": "Game of Life",
      "img": "https://play-lh.googleusercontent.com/Ia1Pt7lUxyCpjMYBhurg3hl-s7dx8Mf-uv-vbwRHPjXmnhYTIvtMyDzMfgOZLIE4f1w",
      "tools": ["mongodb", "express", "react", "node"],
      "focus": "Frontend Development",
      "description": "My implementation of the classic Sudoku (logic-based, combinatorial number puzzle) game.",
      "link": "https://game-of-life-by-shawn-su.netlify.app/",
      "details": [{ "title": "Overview", "content": [""] }],
      "highlights": [
        { "title": "useEffect", "content": [""] },
        {
          "title": "useReducer",
          "content": [
            "Learning how to do page transition/animation was pretty fun for me"
          ]
        }
      ]
    },
    {
      "name": "Sudoku",
      "img": "https://cdn-icons-png.flaticon.com/512/5731/5731711.png",
      "tools": ["mongodb", "express", "react", "node"],
      "focus": "Fullstack Development",
      "details": [{ "title": "Overview", "content": [] }],
      "highlights": [],
      "description": "My implementation of the classic Sudoku (logic-based, combinatorial number puzzle) game.",
      "link": "https://sudoku-shawnsu.netlify.app/"
    }
  ],
  "schoolProjects": [
    {
      "name": "Reservationizr",
      "img": "https://uxwing.com/wp-content/themes/uxwing/download/time-and-date/reservation-icon.png",
      "tools": [
        "mongodb",
        "express",
        "react",
        "node",
        "docker",
        "github",
        "netlify",
        "heroku",
        "insomnia",
        "notion",
        "miro"
      ],
      "focus": "Backend Development",
      "description": "This is the final school project in the Backend development term. This project aims to build & deploy a simple backend for a ready-made restaurant reservation booking app, and stich up the frontend and backend. Users are able to view restaurant info, sign up/log in, make new or view exsiting reservations.",
      "details": [
        {
          "title": "Overview",
          "content": [
            "Frontend - developed on React, deployed to Netlify.",
            "Backend - API server is hosted on Render.com (originally on Heroku.com); database is hosted on MongoDB Atlas; Auth0 is used for user authentication."
          ]
        },
        { "title": "User Authentication", "content": [""] },
        {
          "title": "Docker",
          "content": [
            "Docker is mainly used for local development. Specifically, a mongodb database is created using Docker image, saving the trouble of installing mongodb locally."
          ]
        }
      ],
      "highlights": [
        { "title": "Middleware", "content": [""] },
        {
          "title": "REST API",
          "content": [
            "Learning how to do page transition/animation was pretty fun for me"
          ]
        },
        {
          "title": "Docker",
          "content": [""]
        },
        {
          "title": "Unit Testing",
          "content": [""]
        },
        {
          "title": "Docker Compose",
          "content": [""]
        }
      ],
      "link": "https://reservationizr-app-wwsdi.vercel.app/",
      "source": "https://github.com/WWSDI/02-project---reservationizr-app-part-2---manage-reservations-WWSDI"
    },
    {
      "name": "No.7 Board Game Shop",
      "img": "https://cdn.iconscout.com/icon/premium/png-256-thumb/game-shop-3765597-3140495.png",
      "tools": [
        "react",
        "node",
        "github",
        "stripe",
        "netlify",
        "vscode",
        "slack",
        "google-meet"
      ],

      "focus": "Frontend Development",
      "description": "This is the final school project in the Frontend Development term. This group project aims to build & deploy a simple e-commerce site (only Frontend) for Board Games with online payment function. Users are able to view store items, filter/sort/search for certain items, purchase items and make payments online.",
      "details": [
        {
          "title": "Overview",
          "content": [
            "<ul><li><strong>Frontend</strong> - developed on React, deployed to Netlify.</li> <li><strong>Backend</strong> - API server is hosted on Begin.com; online payment and store items data are hosted on Stripe.com.</li> <li><strong>Main features</strong>: display items; filter, sort, or search items; purchase items and make online payments.</li></ul>"
          ]
        },
        {
          "title": "Managing Project with GitHub",
          "content": [
            "GitHub has great Project management feature. We were able to utilise it and divide the project into 16 small tasks and divvied them all up among the three of us. We also used GitHub's Kanban-style UI to track progress. Pull Requests features is used to help teammates review each other's work and merge individual module/work into the main branch."
          ]
        },
        {
          "title": "Collaborating Remotely",
          "content": [
            "Most of the students attended the course online, so we had to learn how to collaborate on projects remotely by utilising all sorts of communication and productivity tools such as <em>Slack, Google Meet, Google Classroom, Google Docs</em> etc.",
            "We also heavily relied on GitHub's pull requests feature so that we could work on our tasks individually, then reviewed them as group and merged them when completed and tested."
          ]
        }
      ],
      "highlights": [
        {
          "title": "GitHub",
          "content": [
            "Git is essentially a <strong>Time Machine + Multiverse</strong> with which you can go back and forth on a project and creating <em>multiple braching reality</em>. And GitHub expands that capability with Cloud Computing.",
            "Using GitHub was a great learning experience. This school project gave me a bit of taste of how powerful this technology is in terms of allowing developers to collaborate remotely on projects. I now understand how much bigger projects such as <em>Linux kernel</em> with thousands of participants around the world were made possible."
          ]
        },
        {
          "title": "Pull Requests",
          "content": [
            "This was a brand new concept to me at the time, and a bit intimidating at first - we did mess up the main branch and polluted it a couple of times, and had to learn how to fix it. But it turned out to be an incredible feature once you get it.",
            "This feature enables and forces you to think of development in <em>modular</em> way - each teammate is in charge of a feature that is a complete module which can be connected to another one like <em>LEGO</em>. Therefore, as long as everyone follows predefined input/output requirements for their module, all merged modules (result of pull requests) should come together nicely and form a functioning system.",
            "But Pull Requests are not without faults. As our team lacked a project manager who oversaw the overall structure, sometimes we got into a situation where one's impending task depended on the another's unmerged branch, thus creating a <strong>bottleneck effect</strong> for team overall productivity."
          ]
        },
        {
          "title": "Regex",
          "content": [
            "I was responsible for developing the search feature, so I had to learn how to use Regex in order to match user's search input to product's title and description. I learned that Regex is a very powerful technology, although rather complex to use at first, and making mistakes is all too easy.",
            "Although I only dabbled in Regex a bit, but I could tell it's an extremely <strong>concise and precise way</strong> of describing letter/symbol patterns, and is something that could play an important role in <em>data validation</em>."
          ]
        }
      ],
      "link": "https://no7boardgameshop.netlify.app/",
      "source": "https://github.com/WWSDI/stripeapi-group7-boardgame-onlineshop"
    }
  ]
}
