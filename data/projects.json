{
  "personalProjects": [
    {
      "name": "Portfolio Website",
      "img": "https://mir-s3-cdn-cf.behance.net/project_modules/disp/945b0225337909.563440870421b.png",
      "tools": [
        "next",
        "chakra-ui",
        "framer-motion",
        "node",
        "vercel",
        "github"
      ],
      "focus": "Frontend",
      "description": "My personal portfolio website (i.e. this site) that lists previous projects I have done and demostrates my coding skills.",
      "link": "https://sudoku-shawnsu.netlify.app/",
      "link-source": "https://sudoku-shawnsu.netlify.app/",
      "details": [
        { "title": "Overview", "content": "" },
        { "title": "Animation & Transition", "content": "" },
        { "title": "Overview", "content": "" }
      ],
      "highlights": [
        { "title": "Themeable UI Framework", "content": "" },
        { "title": "Animation & Transition", "content": "Learning how to do page transition/animation was pretty fun for me" },
        { "title": "Composition", "content": "Building a project like this really helped deepening the concept of composition and how to create and reuse components. Initially I write a lot of code in one component to the point it becomes hundreds of line and too unwieldy, the structure of the code becomes blurry, you have to go through layers of tags to see what's inside. It becomes clear that the best way to handle this kind of situation is to create lower level components for storing repeating logic/code, then use higher level components to compose the app. " }
      ]
    },
    {
      "name": "Game of Life",
      "img": "https://play-lh.googleusercontent.com/Ia1Pt7lUxyCpjMYBhurg3hl-s7dx8Mf-uv-vbwRHPjXmnhYTIvtMyDzMfgOZLIE4f1w",
      "tools": ["mongodb", "express", "react", "node"],
      "focus": "Frontend",
      "description": "My implementation of the classic Sudoku (logic-based, combinatorial number puzzle) game.",
      "link": "https://game-of-life-by-shawn-su.netlify.app/",
     "details": [
        { "title": "Overview", "content": "" },
        { "title": "Animation & Transition", "content": "" },
        { "title": "Overview", "content": "" }
      ],
      "highlights": [
        { "title": "useEffect", "content": "" },
        { "title": "useReducer", "content": "Learning how to do page transition/animation was pretty fun for me" },
        { "title": "canvas animation", "content": "Building a project like this really helped deepening the concept of composition and how to create and reuse components. Initially I write a lot of code in one component to the point it becomes hundreds of line and too unwieldy, the structure of the code becomes blurry, you have to go through layers of tags to see what's inside. It becomes clear that the best way to handle this kind of situation is to create lower level components for storing repeating logic/code, then use higher level components to compose the app. " }
      ]
    },
    {
      "name": "Sudoku",
      "img": "https://cdn-icons-png.flaticon.com/512/5731/5731711.png",
      "tools": ["mongodb", "express", "react", "node"],
      "focus": "Fullstack",
      "details": [
        { "title": "Overview", "content": "" },
        { "title": "Animation & Transition", "content": "" },
        { "title": "Overview", "content": "" }
      ],
      "highlights": [
        { "title": "useEffect", "content": "" },
        { "title": "useReducer", "content": "Learning how to do page transition/animation was pretty fun for me" },
        { "title": "canvas animation", "content": "Building a project like this really helped deepening the concept of composition and how to create and reuse components. Initially I write a lot of code in one component to the point it becomes hundreds of line and too unwieldy, the structure of the code becomes blurry, you have to go through layers of tags to see what's inside. It becomes clear that the best way to handle this kind of situation is to create lower level components for storing repeating logic/code, then use higher level components to compose the app. " }
      ],
      "description": "My implementation of the classic Sudoku (logic-based, combinatorial number puzzle) game.",
      "link": "https://sudoku-shawnsu.netlify.app/"
    }
  ],
  "schoolProjects": [
    {
      "name": "Reservationizr",
      "img": "https://uxwing.com/wp-content/themes/uxwing/download/time-and-date/reservation-icon.png",
      "tools": ["mongodb", "express", "react", "node"],
      "details": [
        { "title": "Overview", "content": "" },
        { "title": "Animation & Transition", "content": "" },
        { "title": "Overview", "content": "" }
      ],
      "highlights": [
        { "title": "useEffect", "content": "" },
        { "title": "useReducer", "content": "Learning how to do page transition/animation was pretty fun for me" },
        { "title": "canvas animation", "content": "Building a project like this really helped deepening the concept of composition and how to create and reuse components. Initially I write a lot of code in one component to the point it becomes hundreds of line and too unwieldy, the structure of the code becomes blurry, you have to go through layers of tags to see what's inside. It becomes clear that the best way to handle this kind of situation is to create lower level components for storing repeating logic/code, then use higher level components to compose the app. " }
      ],
      "focus": "Backend",
      "description": "School project",
      "link": "https://reservationizr-app-wwsdi.vercel.app/"
    },
    {
      "name": "No.7 Board Game Shop",
      "img": "https://cdn.iconscout.com/icon/premium/png-256-thumb/game-shop-3765597-3140495.png",
      "tools": ["mongodb", "express", "react", "node"],
      "details": [
        { "title": "Overview", "content": "" },
        { "title": "Animation & Transition", "content": "" },
        { "title": "Overview", "content": "" }
      ],
      "highlights": [
        { "title": "useEffect", "content": "" },
        { "title": "useReducer", "content": "Learning how to do page transition/animation was pretty fun for me" },
        { "title": "canvas animation", "content": "Building a project like this really helped deepening the concept of composition and how to create and reuse components. Initially I write a lot of code in one component to the point it becomes hundreds of line and too unwieldy, the structure of the code becomes blurry, you have to go through layers of tags to see what's inside. It becomes clear that the best way to handle this kind of situation is to create lower level components for storing repeating logic/code, then use higher level components to compose the app. " }
      ],
      "focus": "Frontend",
      "description": "School project",
      "link": "https://no7boardgameshop.netlify.app/"
    }
  ]
}
